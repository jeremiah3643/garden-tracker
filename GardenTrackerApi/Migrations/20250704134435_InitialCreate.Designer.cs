// <auto-generated />
using System;
using GardenTrackerApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GardenTrackerApi.Migrations
{
    [DbContext(typeof(GardenContext))]
    [Migration("20250704134435_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("GardenTrackerApi.Models.Crop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlantedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("GardenTrackerApi.Models.Harvest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CropId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CropId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("GardenTrackerApi.Models.Harvest", b =>
                {
                    b.HasOne("GardenTrackerApi.Models.Crop", "Crop")
                        .WithMany("Harvests")
                        .HasForeignKey("CropId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");
                });

            modelBuilder.Entity("GardenTrackerApi.Models.Crop", b =>
                {
                    b.Navigation("Harvests");
                });
#pragma warning restore 612, 618
        }
    }
}
